exit
word_params['usedWords']
word_params['difficulty']
word.params.difficulty
word_params
exit
params
word_params
exit
params
exit
words.select{|word| word_params['data']['usedWords'].include?(word)}
words = Word.all.select{|word|word.difficulty == (word_params['data']['difficulty'].to_i)}
words.select{|word| word_params['data']['usedWords'].include?(word)}
[].include?('hi')
['hi'].include?('h')
['hi'].include?('hi')
word_params['data']['usedWords']
word_params['data']['usedWords'].inlcude?('hi')
words.select{|word| word_params['data']['usedWords'].inlcude?(word)}
word_params['data']
word_params
params
word_params['data']['wordList'].include?('hello')
word_params['data']['wordList'].include('hello')
word_params['data']['wordList']
words.select{|word| word_params['data']['wordList'].inlcude?(word)}
Word.all.select{|word|word.difficulty == (word_params['data']['difficulty'].to_i)}
word_params['data']['difficulty']
word_params['data']
word_params['difficulty']
word_params
params
exit
params
exit
params
exit
params
exit
word_params
params
exit
params
exit
params
exit
word_params
params
exit
params
words
params
exit
params
exit
params
words.sample
words
exit
User.find(params[:id])
params[:id]
user_params
params
exit
data
sessions.first.score
sessions.first
sessions
data
data[s.score]
exit
Session.last
Session.all.sort_by{|s|s.score}
Session.all
Session.all.sort_by{|s| s.score}
Session.all.sort_by{|s| s.score}.reverse[0..4]
c
session_params['score']
Session.find(params['id'])
c
exit
User.find_by(name: params['user']).id
exit
User.find_by(name: params['user']).id
User.find_by(name: params['user'])
params
exit
Session.find(params['id'])
params
c
exit
User.find_by(name: params['user']).id
exit
User.find_by(name: params['user']).id
User.find_by(name: params['user'])
params
exit
